@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin breakpoint($size, $dir: 'min') {
  @if ($dir == 'max') {
    @media (max-width: $size) {
      @content;
    }
  }
  @else {
    @media (min-width: $size) {
      @content;
    }
  }
}

@mixin gradient($from, $to, $direction:null) {
  $startPos: 0%;
  $endPos: 100%;
  background: $from;
  background: -moz-linear-gradient(top, $from $startPos, $to $endPos);
  background: -webkit-linear-gradient(top, $from $startPos, $to $endPos);
  background: linear-gradient(to bottom, $from $startPos, $to $endPos);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=0 );

}
